{"version":3,"sources":["libraries/VideoGallery.css","../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_box-sizing.scss","../../node_modules/spacelift/sass/grid/_layout.scss","../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_outer-container.scss","../../node_modules/bourbon-neat/app/assets/stylesheets/settings/_grid.scss","../../node_modules/bourbon-neat/app/assets/stylesheets/mixins/_clearfix.scss","../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_span-columns.scss","../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_private.scss","libraries/VideoGallery.scss","../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_media.scss","settings/_variables.scss","mixins/_OuterPadding.scss","mixins/_ListingView.scss","../../node_modules/bourbon-neat/app/assets/stylesheets/grid/_omega.scss","../../node_modules/bourbon-neat/app/assets/stylesheets/functions/_private.scss","mixins/_FontAwesomeIcon.scss","libraries/<no source>"],"names":[],"mappings":"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","file":"../../libraries/VideoGallery.css","sourcesContent":["@charset \"UTF-8\";\nhtml {\n  box-sizing: border-box; }\n\n*, *::after, *::before {\n  box-sizing: inherit; }\n\n.PageSection .PageSection-container {\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto; }\n  .PageSection .PageSection-container::after {\n    clear: both;\n    content: \"\";\n    display: block; }\n\n.one-sidebar .PageSection--sidebar {\n  float: left;\n  display: block;\n  margin-right: 2.35765%;\n  width: 23.23176%; }\n  .one-sidebar .PageSection--sidebar:last-child {\n    margin-right: 0; }\n\n.two-sidebars .PageSection--sidebar {\n  float: left;\n  display: block;\n  margin-right: 2.35765%;\n  width: 23.23176%; }\n  .two-sidebars .PageSection--sidebar:last-child {\n    margin-right: 0; }\n\n.no-sidebars .PageSection--content {\n  float: left;\n  display: block;\n  margin-right: 2.35765%;\n  width: 100%; }\n  .no-sidebars .PageSection--content:last-child {\n    margin-right: 0; }\n\n.one-sidebar .PageSection--content {\n  float: left;\n  display: block;\n  margin-right: 2.35765%;\n  width: 74.41059%; }\n  .one-sidebar .PageSection--content:last-child {\n    margin-right: 0; }\n\n.two-sidebars .PageSection--content {\n  float: left;\n  display: block;\n  margin-right: 2.35765%;\n  width: 48.82117%; }\n  .two-sidebars .PageSection--content:last-child {\n    margin-right: 0; }\n\n.HeadingBlock {\n  width: 100%; }\n  @media screen and (min-width: 900px) {\n    .HeadingBlock {\n      margin: 0 auto;\n      width: 60%; } }\n  .HeadingBlock .HeadingBlock-headline {\n    margin: 0;\n    padding: 0; }\n    @media screen and (min-width: 600px) {\n      .HeadingBlock .HeadingBlock-headline {\n        padding: 0 1em; } }\n    .HeadingBlock .HeadingBlock-headline .Heading.Heading--slab {\n      background-color: transparent;\n      color: #555;\n      margin: 0.285em 0 0.75em;\n      padding: 0; }\n\n.paragraph--type--view-reference {\n  margin-top: 2em;\n  padding-top: 2em;\n  border-top: 1px solid #e9e9e9; }\n\n.field__item-label-inline {\n  position: relative; }\n\n.field__item__label {\n  position: relative; }\n  @media screen and (min-width: 600px) {\n    .field__item__label {\n      padding-left: 0.75rem; } }\n  @media screen and (min-width: 900px) {\n    .field__item__label {\n      position: absolute;\n      top: 1em; } }\n\n.ListingView.ListingView--videos {\n  float: left;\n  display: block;\n  margin-right: 2.35765%;\n  width: 100%;\n  padding-left: 0.75rem;\n  padding-right: 0.75rem; }\n  .ListingView.ListingView--videos:last-child {\n    margin-right: 0; }\n  .ListingView.ListingView--videos::after {\n    clear: both;\n    content: \"\";\n    display: block; }\n  @media screen and (min-width: 1200px) {\n    .ListingView.ListingView--videos {\n      padding-left: 0;\n      padding-right: 0; } }\n  .ListingView.ListingView--videos .ListingView-title {\n    background: #555;\n    color: white;\n    padding: 0.5em 1rem;\n    margin-top: 0.5em;\n    margin-bottom: 0.5em; }\n  .ListingView.ListingView--videos .ListingView-row {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 100%;\n    padding: 0;\n    margin-bottom: 1.618em;\n    border-bottom: 1px solid #e9e9e9; }\n    .ListingView.ListingView--videos .ListingView-row:last-child {\n      margin-right: 0; }\n    .ListingView.ListingView--videos .ListingView-row:last-child {\n      border-bottom: none; }\n    .ListingView.ListingView--videos .ListingView-row > * {\n      margin-bottom: 0; }\n  @media screen and (max-width: 600px) {\n    .ListingView.ListingView--videos {\n      padding: 0; } }\n  .ListingView.ListingView--videos .pager:first-of-type {\n    display: none; }\n  .ListingView.ListingView--videos .views-exposed-form .form--inline {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between; }\n    @media screen and (min-width: 600px) {\n      .ListingView.ListingView--videos .views-exposed-form .form--inline {\n        flex-flow: row nowrap; } }\n    @media screen and (min-width: 900px) {\n      .ListingView.ListingView--videos .views-exposed-form .form--inline {\n        justify-content: flex-end; } }\n    .ListingView.ListingView--videos .views-exposed-form .form--inline .FormItem {\n      flex-basis: 100%;\n      margin: 0.25em 0; }\n      @media screen and (min-width: 600px) {\n        .ListingView.ListingView--videos .views-exposed-form .form--inline .FormItem {\n          flex-basis: 50%;\n          flex-grow: 0;\n          margin-left: 1em; }\n          .ListingView.ListingView--videos .views-exposed-form .form--inline .FormItem:first-child {\n            margin-left: 0; } }\n      @media screen and (min-width: 900px) {\n        .ListingView.ListingView--videos .views-exposed-form .form--inline .FormItem {\n          flex-basis: 30%; } }\n  .ListingView.ListingView--videos .form-actions {\n    display: none; }\n  .ListingView.ListingView--videos .ListingView-video {\n    margin-bottom: 1em; }\n    @media screen and (max-width: 600px) {\n      .ListingView.ListingView--videos .ListingView-video {\n        margin: 0;\n        border: 1px solid #38383a;\n        border-left: none;\n        border-right: none; } }\n    @media screen and (min-width: 600px) and (max-width: 900px) {\n      .ListingView.ListingView--videos .ListingView-video {\n        float: left;\n        display: block;\n        margin-right: 2.35765%;\n        width: 48.82117%; }\n        .ListingView.ListingView--videos .ListingView-video:last-child {\n          margin-right: 0; }\n        .ListingView.ListingView--videos .ListingView-video:nth-child(2n) {\n          margin-right: 0; }\n        .ListingView.ListingView--videos .ListingView-video:nth-child(2n+1) {\n          clear: left; } }\n    @media screen and (min-width: 900px) {\n      .ListingView.ListingView--videos .ListingView-video {\n        float: left;\n        display: block;\n        margin-right: 2.35765%;\n        width: 31.76157%; }\n        .ListingView.ListingView--videos .ListingView-video:last-child {\n          margin-right: 0; }\n        .ListingView.ListingView--videos .ListingView-video:nth-child(3n) {\n          margin-right: 0; }\n        .ListingView.ListingView--videos .ListingView-video:nth-child(3n+1) {\n          clear: left; } }\n  .ListingView.ListingView--videos .FormItem--type-select label {\n    position: absolute !important;\n    clip: rect(1px, 1px, 1px, 1px);\n    overflow: hidden;\n    height: 1px;\n    width: 1px;\n    word-wrap: normal; }\n  .ListingView.ListingView--videos .Field--name-field-video a {\n    display: block;\n    position: relative; }\n    .ListingView.ListingView--videos .Field--name-field-video a img {\n      width: 100%;\n      height: auto; }\n    .ListingView.ListingView--videos .Field--name-field-video a:after {\n      content: \"\";\n      font-family: FontAwesome;\n      font-style: normal;\n      font-weight: normal;\n      text-decoration: inherit;\n      padding-left: 0.5em;\n      bottom: 0;\n      color: white;\n      font-size: 4em;\n      height: 1em;\n      left: 0;\n      line-height: 1em;\n      margin: auto;\n      opacity: 1;\n      padding: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      width: 1em; }\n  .ListingView.ListingView--videos .Field--name-field-related-products {\n    align-items: flex-start;\n    display: flex;\n    flex-flow: row nowrap;\n    font-size: 0.9em;\n    margin-top: 0.25em; }\n    .ListingView.ListingView--videos .Field--name-field-related-products .Field-label {\n      flex-shrink: 0;\n      margin-right: 3px; }\n    .ListingView.ListingView--videos .Field--name-field-related-products .Field-items {\n      flex-grow: 1; }\n","@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","// Base variables\n$columns-sidebar: 4 !default;\n$columns-sidebar--twoSidebars: 3 !default;\n$columns-content: 12 !default;\n$columns-content--oneSidebar: 8 !default;\n$columns-content--twoSidebars: 6 !default;\n\n.PageSection {\n    .PageSection-container {\n        @include outer-container;\n    }\n}\n\n.PageSection--sidebar {\n    .one-sidebar & {\n        @include span-columns($columns-sidebar);\n    }\n\n    .two-sidebars & {\n        @include span-columns($columns-sidebar--twoSidebars);\n    }\n}\n\n.PageSection--content {\n    .no-sidebars & {\n        @include span-columns($columns-content);\n    }\n\n    .one-sidebar & {\n        @include span-columns($columns-content--oneSidebar);\n    }\n\n    .two-sidebars & {\n        @include span-columns($columns-content--twoSidebars);\n    }\n}\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centering it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the relative width of a single grid column. The unit used should be the same one used to define `$gutter`. Set with a `!global` flag.\n///\n/// @type Number (Unit)\n\n$column: 4.2358em !default;\n\n/// Sets the relative width of a single grid gutter. The unit used should be the same one used to define `$column`. Set with the `!global` flag.\n///\n/// @type Number (Unit)\n\n$gutter: 1.618em !default;\n\n/// Sets the total number of columns in the grid. Its value can be overridden inside a media query using the `media()` mixin. Set with the `!global` flag.\n///\n/// @type Number (Unitless)\n\n$grid-columns: 12 !default;\n\n/// Sets the max-width property of the element that includes `outer-container()`. Set with the `!global` flag.\n///\n/// @type Number (Unit)\n///\n$max-width: 1200px !default;\n\n/// When set to true, it sets the box-sizing property of all elements to `border-box`. Set with a `!global` flag.\n///\n/// @type Bool\n///\n/// @example css - CSS Output\n///   html {\n///     box-sizing: border-box; }\n///\n///   *, *::after, *::before {\n///     box-sizing: inherit;\n///   }\n\n$border-box-sizing: true !default;\n\n/// Sets the default [media feature](http://www.w3.org/TR/css3-mediaqueries/#media) that `media()` and `new-breakpoint()` revert to when only a breakpoint value is passed. Set with a `!global` flag.\n///\n/// @type String\n\n$default-feature: min-width; // Default @media feature for the breakpoint() mixin\n\n///Sets the default layout direction of the grid. Can be `LTR` or `RTL`. Set with a `!global` flag.\n///\n///@type String\n\n$default-layout-direction: LTR !default;\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://goo.gl/yP5hiZ\n///\n/// @example scss\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display property of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: flex-width($columns);\n  $container-width: flex-width($container-columns);\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: flex-width($container-columns);\n  @return percentage($gutter / $container-width);\n}\n\n@function flex-width($n, $column-width: $fg-column, $gutter-width: $fg-gutter) {\n  @return $n * $column-width + ($n - 1) * $gutter-width;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n","@import \"assets\";\n@import \"../settings/variables\";\n@import \"bourbon\";\n@import \"../settings/grid-settings\";\n@import \"spacelift/grid\";\n@import \"../mixins/OuterPadding\";\n@import \"../mixins/ListingView\";\n@import \"../mixins/ButtonIcon\";\n@import \"../mixins/FontAwesomeIcon\";\n\n.HeadingBlock {\n  width: 100%;\n\n  @include media($screen-largeUp) {\n    margin: 0 auto;\n    width: 60%;\n  }\n\n  .HeadingBlock-headline {\n    margin: 0;\n    padding: 0;\n\n    @include media($screen-mediumUp) {\n      padding: 0 1em;\n    }\n\n    .Heading.Heading--slab {\n      background-color: transparent;\n      color: #555;\n      margin: 0.285em 0 0.75em;\n      padding: 0;\n    }\n  }\n}\n\n.paragraph--type--view-reference {\n  margin-top: 2em;\n  padding-top: 2em;\n  border-top: 1px solid $lightGray;\n}\n\n.field__item-label-inline {\n  position: relative;\n}\n\n.field__item__label {\n  position: relative;\n\n  @include media($screen-mediumUp) {\n    padding-left: 0.75rem;\n  }\n\n  @include media($screen-largeUp) {\n    position: absolute;\n    top: 1em;\n  }\n}\n\n.ListingView.ListingView--videos {\n  @include ListingView($grid: true);\n\n  @include media($screen-mediumDown) {\n    padding: 0;\n  }\n\n  .pager:first-of-type {\n    display: none;\n  }\n\n  .views-exposed-form .form--inline {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n\n    @include media($screen-mediumUp) {\n      flex-flow: row nowrap;\n    }\n\n    @include media($screen-largeUp) {\n      justify-content: flex-end;\n    }\n\n    .FormItem {\n      flex-basis: 100%;\n      margin: 0.25em 0;\n\n      @include media($screen-mediumUp) {\n        flex-basis: 50%;\n        flex-grow: 0;\n        margin-left: 1em;\n\n        &:first-child {\n          margin-left: 0;\n        }\n      }\n\n      @include media($screen-largeUp) {\n        flex-basis: 30%;\n      }\n    }\n  }\n\n  .form-actions {\n    display: none;\n  }\n\n  .ListingView-video {\n    margin-bottom: 1em;\n\n    @include media($screen-mediumDown) {\n      margin: 0;\n      border: 1px solid $darkGray;\n      border-left: none;\n      border-right: none;\n    }\n\n    @include media($screen-mediumOnly) {\n      @include span-columns(6 of 12);\n      @include omega(2n);\n    }\n\n    @include media($screen-largeUp) {\n      @include span-columns(4 of 12);\n      @include omega(3n);\n    }\n  }\n\n  .FormItem--type-select label {\n    position: absolute !important;\n    clip: rect(1px, 1px, 1px, 1px);\n    overflow: hidden;\n    height: 1px;\n    width: 1px;\n    word-wrap: normal;\n  }\n\n  .Field--name-field-video {\n    a {\n      display: block;\n      position: relative;\n\n      img {\n        width: 100%;\n        height: auto;\n      }\n\n      &:after {\n        @include ButtonIcon($icon: '\\f16a');\n        bottom: 0;\n        color: white;\n        font-size: 4em;\n        height: 1em;\n        left: 0;\n        line-height: 1em;\n        margin: auto;\n        opacity: 1;\n        padding: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 1em;\n      }\n    }\n  }\n\n  .Field--name-field-related-products {\n    align-items: flex-start;\n    display: flex;\n    flex-flow: row nowrap;\n    font-size: 0.9em;\n    margin-top:0.25em;\n\n    .Field-label {\n      flex-shrink: 0;\n      margin-right: 3px;\n    }\n\n    .Field-items {\n      flex-grow: 1;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\n///\n/// @param {List} $query\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\n///\n///\n/// @param {Number (unitless)} $total-columns [$grid-columns]\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   .responsive-element {\n///      @include media(769px) {\n///        @include span-columns(6);\n///      }\n///   }\n///\n///  .new-context-element {\n///    @include media(min-width 320px max-width 480px, 6) {\n///      @include span-columns(6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///  @media screen and (min-width: 769px) {\n///    .responsive-element {\n///      display: block;\n///      float: left;\n///      margin-right: 2.35765%;\n///      width: 48.82117%;\n///    }\n///\n///    .responsive-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n///\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\n///    .new-context-element {\n///      display: block;\n///      float: left;\n///      margin-right: 4.82916%;\n///      width: 100%;\n///    }\n///\n///    .new-context-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns !global;\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  } @else {\n    $loop-to: length($query);\n    $media-query: \"screen and \";\n    $default-grid-columns: $grid-columns;\n    $grid-columns: $total-columns !global;\n\n    @if is-not(is-even(length($query))) {\n      $grid-columns: nth($query, $loop-to) !global;\n      $loop-to: $loop-to - 1;\n    }\n\n    $i: 1;\n    @while $i <= $loop-to {\n      $media-query: $media-query + \"(\" + nth($query, $i) + \": \" + nth($query, $i + 1) + \") \";\n\n      @if ($i + 1) != $loop-to {\n        $media-query: $media-query + \"and \";\n      }\n\n      $i: $i + 2;\n    }\n\n    @media #{$media-query} {\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n}\n","// Bourbon settings\n//$asset-pipeline: true;\n//$output-bourbon-deprecation-warnings: true;\n//$em-base: 14px;\n$prefix-for-webkit: false;\n$prefix-for-mozilla: false;\n$prefix-for-microsoft: false;\n$prefix-for-opera: false;\n$prefix-for-spec: false;\n\n// Typography\n$fontFamily-base: 'Montserrat', sans-serif;\n$fontFamily-heading: 'Montserrat', sans-serif;\n\n// Font sizes\n$fontSize-base: 0.9rem;\n$fontSize-h1: 1.6em;\n$fontSize-h2: 1.4em;\n$fontSize-h3: 1.3em;\n$fontSize-h4: 1.2em;\n$fontSize-h5: 1.1em;\n$fontSize-h6: 1.0em;\n$fontSize-body: 0.9rem;\n\n// Line heights\n$lineHeight-base: 1.5;\n$lineHeight-heading: 1.2;\n\n// Font weights\n$fontWeight-base: 400;\n$fontWeight-bold: 600;\n$fontWeight-thin: 200;\n\n// Border radii\n$borderRadius-base: 0;\n$borderRadius-button: 6px;\n\n// Spacing\n$spacing-base: $lineHeight-base * 1em;\n$spacing-fixed: 1.5rem;\n$spacing-small: $spacing-base / 2;\n\n// Z-indexes\n$zIndex-base: 0;\n\n// Named colors\n$lightGray: #e9e9e9;\n$mediumGray: #555;\n$darkGray: #38383a;\n$blue: #0051ba;\n$yellow: #f7dd16;\n\n// Assigned colors\n$color-action: $blue;\n$color-actionAccent: white;\n$color-background: white;\n$color-background--alternate: $lightGray;\n$color-background--medium: $mediumGray;\n$color-border: $lightGray;\n$color-border--medium: #909090;\n$color-border--strong: $mediumGray;\n$color-input: $darkGray;\n$color-button: $yellow;\n\n// Font colors\n$fontColor-base: $mediumGray;\n$fontColor-heading: $darkGray;\n$fontColor-footer: white;\n$fontColor-utility: white;\n$fontColor-button: $darkGray;\n\n// Borders\n$borderStyle-base: solid;\n$borderWidth-base: 1px;\n\n// Box shadows\n$boxShadow-base: 0 0 3px $color-border;\n$boxShadow-form: none;\n\n// Forms\n$form-boxShadow: inset 0 1px 3px rgba(#000, 0.06);\n$form-boxShadow--focus: $form-boxShadow, 0 0 5px adjust-color($color-action, $lightness: -5%, $alpha: -0.3);\n$confirmation-checkbox-color: white;\n\n// Animations\n$duration-base: 150ms;\n$timing-base: ease;\n\n","@mixin OuterPadding(\n  $amount: $spacing-fixed / 2,\n  $breakpoint: $screen-xLargeUp,\n  $reset: false,\n  $side: 'both',\n  $sidebar: false\n) {\n  @if $reset and $side == 'both' {\n    padding: 0 $amount;\n  } @else {\n    @if $side == 'both' {\n      padding-left: $amount;\n      padding-right: $amount;\n    } @else {\n      padding-#{$side}: $amount;\n    }\n  }\n\n  @if $sidebar {\n    @include media($screen-largeUp) {\n      padding-right: 0;\n    }\n  }\n\n  @if $breakpoint {\n    @include media($breakpoint) {\n      @if $side == 'both' {\n        padding-left: 0;\n        padding-right: 0;\n      } @else {\n        padding-#{$side}: 0;\n      }\n    }\n  }\n}\n","@mixin ListingView(\n  $columns: 12 of 12,\n  $outerPadding: true,\n  $titleBackground: $mediumGray,\n  $separator: true,\n  $grid: false\n) {\n  @include span-columns($columns);\n  @include clearfix;\n\n  @if $outerPadding {\n    @include OuterPadding();\n  }\n\n  .ListingView-title {\n    background: $titleBackground;\n    color: white;\n    padding: 0.5em 1rem;\n    margin-top: 0.5em;\n    margin-bottom: 0.5em;\n  }\n\n  .ListingView-row {\n    @include span-columns(12 of 12);\n\n    @if $grid {\n      padding: 0;\n      margin-bottom: $gutter;\n    } @else {\n      padding: $gutter 0;\n      margin-bottom: 0;\n\n      &:first-child {\n        padding-top: 0;\n      }\n    }\n\n    @if $separator {\n      border-bottom: 1px solid $lightGray;\n\n      &:last-child {\n        border-bottom: none;\n      }\n    } @else {\n      border-bottom: none;\n    }\n\n    > * {\n      margin-bottom: 0;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property. It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.\n///\n/// @param {List} $query [block]\n///   List of arguments. Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).\n///\n///   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically adds a clear to the `*n+1` th element. Note that composite arguments such as `2n+1` do not support this feature.\n///\n///   **Deprecation warning**: The omega mixin will no longer take a `$direction` argument. To change the layout direction, use `row($direction)` or set `$default-layout-direction` instead.\n///\n/// @example scss - Usage\n///   .element {\n///     @include omega;\n///   }\n///\n///   .nth-element {\n///     @include omega(4n);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n) {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n+1) {\n///     clear: left;\n///   }\n\n@mixin omega($query: block, $direction: default) {\n  $table: belongs-to(table, $query);\n  $auto: belongs-to(auto, $query);\n\n  @if $direction != default {\n    @include -neat-warn(\"The omega mixin will no longer take a $direction argument. To change the layout direction, use the direction(){...} mixin.\");\n  } @else {\n    $direction: get-direction($layout-direction, $default-layout-direction);\n  }\n\n  @if $table {\n    @include -neat-warn(\"The omega mixin no longer removes padding in table layouts.\");\n  }\n\n  @if length($query) == 1 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n\n    @else if contains-display-value($query) and $table == false {\n      margin-#{$direction}: 0;\n    }\n\n    @else {\n      @include nth-child($query, $direction);\n    }\n  } @else if length($query) == 2 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    } @else {\n      @include nth-child(nth($query, 1), $direction);\n    }\n  } @else {\n    @include -neat-warn(\"Too many arguments passed to the omega() mixin.\");\n  }\n}\n\n@mixin nth-child($query, $direction) {\n  $opposite-direction: get-opposite-direction($direction);\n\n  &:nth-child(#{$query}) {\n    margin-#{$direction}: 0;\n  }\n\n  @if type-of($query) == string {\n    $query: str-replace($query, \" \", \"\");\n    $operator: false;\n\n    @if str_index($query, \"+\") {\n      $operator: \"+\";\n    } @else if str_index($query, \"-\") {\n      $operator: \"-\";\n    }\n\n    @if $operator {\n      $operator-index: str_index($query, $operator);\n      $first: str-slice($query, 0, ($operator-index - 1));\n      $last: to-number(str-slice($query, ($operator-index + 1), -1));\n      @if $operator == \"+\" {\n        $last: $last + 1;\n      } @else if $operator == \"-\" {\n        $last: $last - 1;\n      }\n      $nth: \"#{$first}#{$operator}#{$last}\";\n\n      &:nth-child(#{$nth}) {\n        clear: $opposite-direction;\n      }\n    }\n  } @else if type-of($query) == number && unit($query) == \"n\" {\n    &:nth-child(#{$query}+1) {\n      clear: $opposite-direction;\n    }\n  }\n}\n","// Not function for Libsass compatibility\n// https://github.com/sass/libsass/issues/368\n@function is-not($value) {\n  @return if($value, false, true);\n}\n\n// Checks if a number is even\n@function is-even($int) {\n  @return $int % 2 == 0;\n}\n\n// Checks if an element belongs to a list or not\n@function belongs-to($tested-item, $list) {\n  @return is-not(not-belongs-to($tested-item, $list));\n}\n\n@function not-belongs-to($tested-item, $list) {\n  @return is-not(index($list, $tested-item));\n}\n\n// Contains display value\n@function contains-display-value($query) {\n  @return belongs-to(table, $query)\n       or belongs-to(block, $query)\n       or belongs-to(inline-block, $query)\n       or belongs-to(inline, $query);\n}\n\n// Parses the first argument of span-columns()\n@function container-span($span: $span) {\n  @if length($span) == 3 {\n    $container-columns: nth($span, 3);\n    @return $container-columns;\n  } @else if length($span) == 2 {\n    $container-columns: nth($span, 2);\n    @return $container-columns;\n  }\n\n  @return $grid-columns;\n}\n\n@function container-shift($shift: $shift) {\n  $parent-columns: $grid-columns !default !global;\n\n  @if length($shift) == 3 {\n    $container-columns: nth($shift, 3);\n    @return $container-columns;\n  } @else if length($shift) == 2 {\n    $container-columns: nth($shift, 2);\n    @return $container-columns;\n  }\n\n  @return $parent-columns;\n}\n\n// Generates a striped background\n@function gradient-stops($grid-columns, $color: $visual-grid-color) {\n  $transparent: transparent;\n  $alt-color: darken($color, 10%);\n\n  $column-width: flex-grid(1, $grid-columns);\n  $gutter-width: flex-gutter($grid-columns);\n  $column-offset: $column-width;\n  $alternate: false;\n\n  $values: ($transparent 0, if($alternate, $color, $alt-color) 0);\n\n  @for $i from 1 to $grid-columns*2 {\n    @if is-even($i) {\n      $values: append($values, $transparent $column-offset, comma);\n      $values: append($values, if($alternate, $color, $alt-color) $column-offset, comma);\n      $column-offset: $column-offset + $column-width;\n    } @else {\n      $values: append($values, if($alternate, $color, $alt-color) $column-offset, comma);\n      $values: append($values, $transparent $column-offset, comma);\n      $column-offset: $column-offset + $gutter-width;\n\n      $alternate: not $alternate;\n    }\n  }\n\n  @return $values;\n}\n\n// Layout direction\n@function get-direction($layout, $default) {\n  $direction: null;\n\n  @if to-upper-case($layout) == \"LTR\" or to-upper-case($layout) == \"RTL\" {\n    $direction: direction-from-layout($layout);\n  } @else {\n    $direction: direction-from-layout($default);\n  }\n\n  @return $direction;\n}\n\n@function direction-from-layout($layout) {\n  $direction: null;\n\n  @if to-upper-case($layout) == \"LTR\" {\n    $direction: right;\n  } @else {\n    $direction: left;\n  }\n\n  @return $direction;\n}\n\n@function get-opposite-direction($direction) {\n  $opposite-direction: left;\n\n  @if $direction == \"left\" {\n    $opposite-direction: right;\n  }\n\n  @return $opposite-direction;\n}\n\n\n@function to-number($string) {\n  $string: str-replace($string, \" \", \"\");\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0 1 2 3 4 5 6 7 8 9;\n  $result: 0;\n\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if not $index {\n      @warn \"Unknown character `#{$character}`.\";\n      @return false;\n    }\n\n    $number: nth($numbers, $index);\n    $result: $result * 10 + $number;\n  }\n\n  @return $result;\n}\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    $first: str-slice($string, 1, $index - 1);\n    $last-slice: str-slice($string, $index + str-length($search));\n    $last: str-replace($last-slice, $search, $replace);\n    @return $first + $replace + $last;\n  }\n\n  @return $string;\n}\n","@mixin FontAwsesomeIcon(\n  $icon: \"\\f054\"\n) {\n  content: $icon;\n  font-family: FontAwesome;\n  font-style: normal;\n  font-weight: normal;\n  text-decoration: inherit;\n}\n",null]}